## MANTA Camera Data Flow
direction: down

# Define styles
styles: {
  process: {
    shape: rectangle
    fill: "#E0F7FA"
    stroke: "#00ACC1"
    border-radius: 8
    shadow: true
  }
  data: {
    shape: cylinder
    fill: "#E8F5E9"
    stroke: "#43A047"
  }
  io: {
    shape: parallelogram
    fill: "#FFF3E0"
    stroke: "#FB8C00"
  }
  camera: {
    shape: image
    icon: https://icons.terrastruct.com/aws%2FInternet%20of%20Things%2FIoT_Camera_light-bg.svg
    width: 70
    height: 70
  }
  cloud: {
    shape: cloud
    fill: "#B3E5FC"
    stroke: "#039BE5"
  }
  start-end: {
    shape: stadium
    fill: "#E1BEE7"
    stroke: "#8E24AA"
  }
  decision: {
    shape: diamond
    fill: "#FFECB3"
    stroke: "#FFB300"
  }
  person: {
    shape: person
    fill: "#BBDEFB"
    stroke: "#1976D2"
  }
}

title: {
  label: MANTA Camera System - Data Flow
  near: top-center
  shape: text
  style: {
    font-size: 24
    font-color: "#212121"
    bold: true
    underline: true
  }
}

# Primary data flow
start: {
  label: Start
  style: start-end
}

camera_input: {
  label: Video Input
  style: camera
}

frame_acquisition: {
  label: Frame Acquisition
  style: process
}

frame_preprocessing: {
  label: Frame Preprocessing
  description: "Resize, normalize, format"
  style: process
}

person_detection: {
  label: Person Detection
  description: "YOLOv8 model inference"
  style: process
}

detection_results: {
  label: Detection Results
  style: data
}

feature_extraction: {
  label: Feature Extraction
  description: "Extract identity features"
  style: process
}

person_tracking: {
  label: Person Tracking
  description: "Match with known identities"
  style: process
}

is_new_person: {
  label: New Person?
  style: decision
}

create_new_identity: {
  label: Create New Identity
  style: process
}

update_existing_identity: {
  label: Update Existing Identity
  style: process
}

identity_database: {
  label: Identity Database
  style: data
}

event_generation: {
  label: Event Generation
  style: process
}

local_logging: {
  label: Local Storage
  style: data
}

cloud_upload: {
  label: Cloud Upload
  style: process
}

firebase: {
  label: Firebase
  style: cloud
}

end: {
  label: End
  style: start-end
}

# Flow connections
start -> camera_input
camera_input -> frame_acquisition: "Raw video\nstream"
frame_acquisition -> frame_preprocessing: "Raw\nframe"
frame_preprocessing -> person_detection: "Processed\nframe"
person_detection -> detection_results: "Bounding\nboxes"
detection_results -> feature_extraction: "Person\ncrops"
feature_extraction -> person_tracking: "Feature\nvectors"
person_tracking -> is_new_person: "Similarity\nscores"

is_new_person -> create_new_identity: "Yes"
is_new_person -> update_existing_identity: "No"
create_new_identity -> identity_database
update_existing_identity -> identity_database

identity_database -> event_generation: "Tracked\nidentities"
event_generation -> local_logging: "Event\ndata"
event_generation -> cloud_upload: "Event\ndata"
cloud_upload -> firebase
local_logging -> end
firebase -> end

# WebCam config branch
webcam_input: {
  label: WebCam Input
  style: io
}

webcam_connection: {
  label: WebCam Protocol Setup
  description: "Connect via RTMP/WiFi"
  style: process
}

webcam_input -> webcam_connection
webcam_connection -> frame_acquisition: "WebCam\nstream"

# Remote configuration branch
remote_config: {
  label: Remote Configuration
  style: io
}

config_server: {
  label: HTTP Config Server
  style: process
}

config_file: {
  label: Configuration File
  style: data
}

remote_config -> config_server: "Web UI\nchanges"
config_server -> config_file: "Update\nsettings"
config_file -> frame_acquisition: "Camera\nsettings"
config_file -> person_detection: "Detection\nparameters"
config_file -> person_tracking: "Tracking\nparameters"
config_file -> cloud_upload: "Firebase\nsettings"

# Add data size annotations
annotations: {
  frame_size: {
    label: "~1-2 MB per frame (raw)"
    target: frame_acquisition
    style.font-size: 11
  }
  
  detection_size: {
    label: "~0.1-1 KB per detection"
    target: detection_results
    style.font-size: 11
  }
  
  feature_size: {
    label: "64-128 floating points\nper person"
    target: feature_extraction
    style.font-size: 11
  }
  
  identity_size: {
    label: "~5-20 KB per identity"
    target: identity_database
    style.font-size: 11
  }
  
  event_size: {
    label: "~1-2 KB per event"
    target: event_generation
    style.font-size: 11
  }
}